function inyectar() {
  const inputsCanvas = document.querySelectorAll("#signature");
  const inputs = document.querySelectorAll("input[type=file]");

  inputsCanvas.forEach(crearBotonFirmar);
  inputsCanvas.forEach(crearBotonHuella);
}

function crearBotonFirmar(input) {
  const button = document.createElement("button");

  button.innerHTML = "Firmar ✒️";
  button.style.marginRight = "10px";
  button.style.borderRadius = "5px";
  button.style.backgroundColor = "blue";
  button.style.color = "white";
  button.onclick = (e) => {
    e.preventDefault();
    captureSignature({
      useSTU: false,
      onCanvasAdquired: ({ canvas, base64 }) => {
        let docusCanvas = document.getElementsByClassName("jSignature")[0];
        let base64Element = document.getElementById("base64Load");
        base64Element.value = base64;
        docusCanvas.getContext("2d").drawImage(canvas, 0, 0);
      },
    });
  };

  input.before(button, input.nextSibling);

  return button;
}

function crearBotonHuella(input) {
  const button = document.createElement("button");

  button.innerHTML = "Huella 👆";
  button.style.marginRight = "10px";
  button.style.borderRadius = "5px";
  button.style.backgroundColor = "green";
  button.style.color = "white";
  button.onclick = (e) => {
    e.preventDefault();

    //show a simple modal with h1 and a button
    const modal = document.createElement("div");
    modal.id = "modalHuella";
    modal.style.position = "fixed";
    modal.style.top = "0";
    modal.style.left = "0";
    modal.style.width = "100%";
    modal.style.height = "100%";
    modal.style.backgroundColor = "rgba(0, 0, 0, 0.5)";
    modal.style.display = "flex";
    modal.style.flexDirection = "column";
    modal.style.justifyContent = "center";
    modal.style.alignItems = "center";
    modal.style.zIndex = "1000";
    modal.innerHTML = `
      <div style="width: 33vh; background: white;" >
        <h1>Coloque su dedo en el lector</h1>
      <button id="closeModal" onclick=" document.getElementById('huellaModal').remove()">Cancelar</button>
      <button id="closeModal">Reintentar</button>
      <button id="closeModal">Continuar</button>
      <img src="" id="huellaImagen">
      </div>
    `;
    document.body.appendChild(modal);

    let huellaSDK = new Fingerprint.WebApi();
    let valor = "";
    let calidad = "";
    let huella = "";
    huellaSDK.startAcquisition(Fingerprint.SampleFormat.PngImage, valor);
    huellaSDK.onDeviceConnected = function (e) {
      // Detects if the device is connected for which acquisition started
      alert("Scan your finger");
    };
    huellaSDK.onDeviceDisconnected = function (e) {
      // Detects if device gets disconnected - provides deviceUid of disconnected device
      alert("Device disconnected");
    };
    huellaSDK.onCommunicationFailed = function (e) {
      // Detects if there is a failure in communicating with U.R.U web SDK
      alert("Communication Failed");
    };
    huellaSDK.onSamplesAcquired = function (s) {
      var sample = JSON.parse(s.samples);
      console.log("Intentos", sample);
      if (calidad == "Good") {
        huella = Fingerprint.b64UrlTo64(sample[sample.length - 1]);
        console.log("Huella", huella);

        let huellaImagen = document.getElementById("huellaImagen");

        huellaImagen.src = `data:image/png;base64,${huella}`;

        dibujarACanvas(`data:image/png;base64,${huella}`);

        huellaSDK.stopAcquisition();
      } else {
        console.log("otra vez");
      }
    };
    huellaSDK.onQualityReported = function (e) {
      // Quality of sample acquired - Function triggered on every sample acquired
      console.log("CALIDAD", Fingerprint.QualityCode[e.quality]);
      calidad = Fingerprint.QualityCode[e.quality];
    };
  };

  input.before(button, input.nextSibling);

  return button;
}

function dibujarACanvas(base64) {
  const canvas = document.createElement("canvas");
  const ctx = canvas.getContext("2d");
  const img = new Image();
  img.src = base64;
  img.onload = () => {
    canvas.width = img.width;
    canvas.height = img.height;

    ctx.drawImage(img, 0, 0);
  };

  let docusCanvas = document.getElementsByClassName("jSignature")[0];
  let base64Element = document.getElementById("base64Load");
  base64Element.value = base64;

  docusCanvas.getContext("2d").drawImage(canvas, 0, 0);
}
